{
    "testcases": {
	"CWE121": {
	    "s01": [
		"char_type_overrun_memcpy",
		"char_type_overrun_memmove",
		"CWE129_connect_socket",
		"CWE129_fgets",
		"CWE129_fscanf",
		"CWE129_large",
		"CWE129_listen_socket",
		"CWE129_rand",
		"CWE131_loop",
		"CWE131_memcpy",
		"CWE135",
		"CWE193_char_alloca_cpy"
	    ],
	    "s02": [
		"CWE193_char_alloca_loop",
		"CWE193_char_alloca_memcpy",
		"CWE193_char_alloca_ncpy",
		"CWE193_char_declare_cpy",
		"CWE193_char_declare_loop",
		"CWE193_char_declare_memcpy",
		"CWE193_char_declare_memmove",
		"CWE193_char_declare_ncpy"
	    ],
	    "s03": [
		"CWE805_char_alloca_loop",
		"CWE805_char_alloca_memcpy",
		"CWE805_char_alloca_memmove",
		"CWE805_char_alloca_ncat",
		"CWE805_char_alloca_ncpy",
		"CWE805_char_alloca_snprintf",
		"CWE805_char_declare_loop",
		"CWE805_char_declare_memcpy",
		"CWE805_char_declare_memmove",
		"CWE805_char_declare_ncat",
		"CWE805_char_declare_ncpy"
	    ],
	    "s04":  [
		"CWE805_char_declare_snprintf",
		"CWE805_int64_t_alloca_loop",
		"CWE805_int64_t_alloca_memcpy",
		"CWE805_int64_t_alloca_memmove",
		"CWE805_int64_t_declare_loop",
		"CWE805_int64_t_declare_memcpy",
		"CWE805_int64_t_declare_memmove",
		"CWE805_int_alloca_loop",
		"CWE805_int_alloca_memcpy",
		"CWE805_int_alloca_memmove",
		"CWE805_int_declare_loop",
		"CWE805_int_declare_memcpy",
		"CWE805_int_declare_memmove",
		"CWE805_struct_alloca_loop",
		"CWE805_struct_alloca_memcpy"
	    ]
	}
    },
    "cwenames": {
	"CWE121": "CWE121_Stack_Based_Buffer_overflow",
	"CWE122": "CWE122_Heap_Based_Buffer_Overflow",
	"CWE123": "CWE123_Write_What_Where_Condition",
	"CWE124": "CWE124_Buffer_Underwrite",
	"CWE126": "CWE126_Buffer_Overread",
	"CWE127": "CWE127_Buffer_Underread",
	"CWE134": "CWE134_Uncontrolled_Format_String",
	"CWE188": "CWE188_Reliance_on_Data_Memory_Layout",
	"CWE190": "CWE190_Integer_Overflow",
	"CWE191": "CWE191_Integer_Underflow",
	"CWE194": "CWE194_Unexpected_Sign_Extension",
	"CWE195": "CWE195_Signed_to_Unsigned_Conversion_Error",
	"CWE196": "CWE196_Unsigned_to_Signed_Conversion_Error",
	"CWE197": "CWE197_Numeric_Truncation_Error",
	"CWE242": "CWE242_Use_of_Inherently_Dangerous_Function",
	"CWE252": "CWE252_Unchecked_Return_Value",
	"CWE253": "CWE253_Incorrect_Check_of_Function_Return_Value",
	"CWE369": "CWE369_Divide_by_Zero",
	"CWE391": "CWE391_Unchecked_Error_Condition",
	"CWE415": "CWE415_Double_Free",
	"CWE416": "CWE416_Use_After_Free",
	"CWE457": "CWE457_Use_of_Uninitialized_Variable",
	"CWE467": "CWE467_Use_of_sizeof_on_Pointer_Type",
	"CWE468": "CWE468_Incorrect_Pointer_Scaling",
	"CWE469": "CWE469_Use_of_Pointer_Subtraction_to_Determine_Size",
	"CWE476": "CWE476_NULL_Pointer_Dereference",
	"CWE562": "CWE562_Return_of_Stack_Variable_Address",
	"CWE587": "CWE587_Assignment_of_Fixed_Address_to_Pointer",
	"CWE588": "CWE588_Attempt_to_Access_Child_of_Non_Structure_Pointer",
	"CWE590": "CWE590_Free_Memory_Not_on_Heap",
	"CWE665": "CWE665_Improper_Initialization",
	"CWE680": "CWE680_Integer_Overflow_to_Buffer_Overflow",
	"CWE681": "CWE681_Incorrect_Conversion_Between_Numeric_Types",
	"CWE685": "CWE685_Function_Call_With_Incorrect_Number_of_Arguments",
	"CWE688": "CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument",
	"CWE690": "CWE690_NULL_Deref_From_Return",
	"CWE758": "CWE758_Undefined_Behavior",
	"CWE761": "CWE761_Free_Pointer_Not_at_Start_of_Buffer",
	"CWE789": "CWE789_Uncontrolled_Mem_Alloc",
	"CWE843": "CWE843_Type_Confusion"
    },
    "variants": {
	"01": "Baseline",
	"02": "Control flow: if(1) and if(0)",
	"03": "Control flow: if(5==5) and if(5!=5)",
	"04": "Control flow: if(staticTrue) and if(staticFalse)",
	"05": "Control flow: if(staticTrue) and if(staticFalse)",
	"06": "Control flow: if(STATIC_CONST_FIVE==5) and if(STATIC_CONST_FIVE!=5)",
	"07": "Control flow: if(staticFive==5) and if(staticFive!=5)",
	"08": "Control flow: if(staticReturnsTrue()) and if(staticReturnsFalse())",
	"09": "Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)",
	"10": "Control flow: if(globalTrue) and if(globalFalse)",
	"11": "Control flow: if(globalReturnsTrue()) and if(globalReturnsFalse())",
	"12": "Control flow: if(globalReturnsTrueOrFalse())",
	"13": "Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)",
	"14": "Control flow: if(globalFive==5) and if(globalFive!=5)",
	"15": "Control flow: switch(6) and switch(7)",
	"16": "Control flow: while(1)",
	"17": "Control flow: for loops",
	"18": "Control flow: goto statements",
	"21": "Control flow: Flow controlled by value of a static global variable (1 file)",
	"22": "Control flow: Flow controlled by value of a global variable (2 files)",
	"31": "Data flow using a copy of data within the same function",
	"32": "Data flow using two pointers to the same value within the same function",
	"34": "Data flow: use of a union containing two methods of accessing the same data (within the same function)",
	"41": "Data flow: data passed as an argument from one function to another in the same source file",
	"42": "Data flow: data returned from one function to another in the same source file",
	"44": "Data/control flow: data passed as an argument from one function to a function in the same source file called via a function pointer",
	"45": "Data flow: data passed as a static global variable from one function to another in the same source file",
	"51": "Data flow: data passed as an argument from one function to another in different source files",
	"52": "Data flow: data passed as an argument from one function to another to another in three different source files",
	"53": "Data flow: data passed as an argument from one function through two others to a fourth; all four functions are in different source files",
	"54": "Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files",
	"61": "Data flow: data returned from one function to another in different source files",
	"63": "Data flow: pointer to data passed from one function to another in different source files",
	"64": "Data flow: void pointer to data passed from one function to another in different source files",
	"65": "Data/control flow: data passed as an argument from one function to a function in a different source file called via a function pointer",
	"66": "Data flow: data passed in an array from one function to another in different source files",
	"67": "Data flow: data passed in a struct from one function to another in different source files",
	"68": "Data flow: data passed as a global variable from one function to another in different source files"
    }
}
